{"version":3,"sources":["webpack:///./src/components/project-modify.vue?e4d3","webpack:///./src/components/project-modify.vue","webpack:///./node_modules/wangeditor/release/wangEditor.js","webpack:///./node_modules/js-base64/base64.js","webpack:///src/components/project-modify.vue"],"names":["components_project_modify","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","$t","ref","attrs","accept-charset","enctype","directives","name","rawName","value","modify","expression","type","domProps","on","input","$event","target","composing","$set","placeholder","autofocus","id","isFocus","_e","style","background","photos","change","uploadPic","isLoad","src","width","click","deletePic","href","data-toggle","_l","item","index","key","deleteGear","level","targetToken","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","_value","multiple","changeUnit","gearList","length","addGear","changeTargetToken","toggleShow","timeToStamp","endTimeStamp","checked","isArray","_i","$$a","$$el","$$c","$$i","concat","slice","nextStep","role","_m","to","data-dismiss","innerHTML","info","alertInfo","toastInfo","isWarn","toast","infoByToast","staticRenderFns","aria-hidden","__vue_styles__","ssrContext","__webpack_require__","Component","normalizeComponent","project_modify","__webpack_exports__","factory","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","html","div","nodeType","selectorResult","replace","trim","indexOf","document","createElement","children","result","querySelectorAll","i","$","constructor","forEach","fn","elem","clone","deep","cloneList","push","cloneNode","get","first","last","types","split","addEventListener","e","matches","off","removeEventListener","attr","val","getAttribute","setAttribute","addClass","className","arr","join","removeClass","css","currentStyle","resultArr","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","content","alt","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","test","isIE","window","objForEach","obj","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","_this","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$trs","trLength","tr","locationData","$currentTr","newTr","trData","tdIndex","$currentTd","toLowerCase","$table","textValId","width30","width50","width100","delBtn","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","fileElem","fileList","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","debugInfo","customAlert","Error","img","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","customConfig","_initConfig","Object","assign","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor","module","exports","global","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","self","_Base64","Base64","version","buffer","eval","err","undefined","b64chars","b64tab","bin","t","l","charAt","fromCharCode","String","cb_utob","cc","charCodeAt","re_utob","utob","u","cb_encode","ccc","padlen","ord","btoa","b","_encode","from","Uint8Array","encode","urisafe","m0","encodeURI","re_btou","cb_btou","cccc","offset","btou","cb_decode","len","n","chars","_atob","atob","a","_decode","decode","noConflict","VERSION","fromBase64","toBase64","__buffer__","defineProperty","noEnum","v","enumerable","writable","configurable","extendString","apply","props","modifyUrl","isShow","desHash","amount","creator","des","endDate","endTime","eosID","releaseTime","targetAccount","targetTokenContract","targetTokenDecimal","low","high","email","isNull","mounted","__WEBPACK_IMPORTED_MODULE_4_wangeditor___default","location","reload","that","globalData","domain","上传图片","网络图片","图片链接","插入","字号","设置列表","有序列表","无序列表","对齐方式","靠左","居中","靠右","$http","then","res","json","money","pow","console","log","methods","__WEBPACK_IMPORTED_MODULE_5_js_sha256___default","sha256","__WEBPACK_IMPORTED_MODULE_6_static_js_user__","getAccount","isGearListFalse","some","unitNum","formData","$refs","form","gearJson","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_json_stringify___default","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default","entries","next","done","pair","File","delete","return","getEos","transaction","actions","account","contract","authorization","actor","permission","authority","initiator","item_digest","receiver","min_fund","parseFloat","toFixed","precision","symbol","max_fund","target_fund","deadline","post","cache","processData","contentType","modal","message","catch","URL","createObjectURL","getTime","targetTokenDecimals","unit","splice","components","alertModal","__WEBPACK_IMPORTED_MODULE_2__base_alert__","mdsToast","__WEBPACK_IMPORTED_MODULE_7__base_toast__"],"mappings":"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","file":"static/js/5.94d8f4874d81926796d2.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"project-modify project-sm-container\"},[(_vm.isNull)?_c('div',{staticClass:\"isNull\"},[_vm._v(_vm._s(_vm.$t('project_error')))]):_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-8 col-md-offset-2\"},[_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$t('basic_project_information')))]),_vm._v(\" \"),_c('form',{ref:\"form\",staticClass:\"basic-form\",attrs:{\"accept-charset\":\"utf-8\",\"enctype\":\"multipart/form-data\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.creator),expression:\"modify.creator\"}],staticClass:\"hide\",attrs:{\"name\":\"creator\",\"type\":\"text\"},domProps:{\"value\":(_vm.modify.creator)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"creator\", $event.target.value)}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.targetAccount),expression:\"modify.targetAccount\"}],staticClass:\"hide\",attrs:{\"name\":\"targetAccount\",\"type\":\"text\"},domProps:{\"value\":(_vm.modify.targetAccount)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"targetAccount\", $event.target.value)}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.targetToken),expression:\"modify.targetToken\"}],staticClass:\"hide\",attrs:{\"name\":\"targetToken\",\"type\":\"text\"},domProps:{\"value\":(_vm.modify.targetToken)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"targetToken\", $event.target.value)}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.targetTokenContract),expression:\"modify.targetTokenContract\"}],staticClass:\"hide\",attrs:{\"name\":\"targetTokenContract\",\"type\":\"text\"},domProps:{\"value\":(_vm.modify.targetTokenContract)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"targetTokenContract\", $event.target.value)}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.eosID),expression:\"modify.eosID\"}],staticClass:\"hide\",attrs:{\"name\":\"eosID\",\"type\":\"text\"},domProps:{\"value\":(_vm.modify.eosID)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"eosID\", $event.target.value)}}}),_vm._v(\" \"),_c('label',[_vm._v(_vm._s(_vm.$t('project_title')))]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.title),expression:\"modify.title\"}],staticClass:\"basic-input\",attrs:{\"name\":\"title\",\"type\":\"text\",\"placeholder\":_vm.$t('project_title_pl'),\"autofocus\":\"\"},domProps:{\"value\":(_vm.modify.title)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"title\", $event.target.value)}}}),_vm._v(\" \"),_c('label',[_vm._v(_vm._s(_vm.$t('tell_story')))]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"story\"}},[(!_vm.isFocus)?_c('div',{staticClass:\"story_pl\"},[_vm._v(_vm._s(_vm.$t('tell_story_pl')))]):_vm._e()]),_vm._v(\" \"),_c('label',[_vm._v(_vm._s(_vm.$t('position_photo')))]),_vm._v(\" \"),_c('div',{staticClass:\"photo-container\"},[_c('div',{staticClass:\"photo\",style:({background: _vm.modify.photos?'url(' + _vm.modify.photos +')no-repeat center/cover':'var(--paleBlue)'})},[_c('input',{attrs:{\"name\":\"photos[]\",\"type\":\"file\"},on:{\"change\":_vm.uploadPic}}),_vm._v(\" \"),(!_vm.isLoad)?[_c('img',{attrs:{\"src\":\"static/img/icon/web_icon_pic.png\",\"width\":\"72\"}}),_vm._v(\" \"),_c('h5',[_vm._v(_vm._s(_vm.$t('position_photo_pl')))]),_vm._v(\" \"),_c('p',{staticClass:\"photo-tip\"},[_vm._v(_vm._s(_vm.$t('position_photo_tip')))])]:_vm._e()],2),_vm._v(\" \"),(_vm.isLoad)?_c('div',{staticClass:\"photo-ext\"},[_c('div',{staticClass:\"pull-right\"},[_c('span',{staticClass:\"delete\",on:{\"click\":_vm.deletePic}},[_vm._v(_vm._s(_vm.$t('delete')))]),_vm._v(\" \"),_c('span',{staticClass:\"again\"},[_vm._v(_vm._s(_vm.$t('upload_again')))])]),_vm._v(\" \"),_c('div',{staticClass:\"blank\"})]):_vm._e()]),_vm._v(\" \"),(_vm.type==1)?_c('div',{staticClass:\"gear\"},[_c('a',{staticClass:\"what-gear\",attrs:{\"href\":\"#gear_des\",\"data-toggle\":\"modal\"}},[_vm._v(_vm._s(_vm.$t('what_is_gear')))]),_vm._v(\" \"),_c('label',[_vm._v(_vm._s(_vm.$t('add_gear')))]),_vm._v(\" \"),_c('ul',{staticClass:\"gear-list\"},[_vm._l((_vm.gearList),function(item,index){return _c('li',{key:index},[_c('span',{staticClass:\"delete-gear\",on:{\"click\":function($event){_vm.deleteGear(index)}}},[_vm._v(_vm._s(_vm.$t('delete')))]),_vm._v(\" \"),_c('h3',[_vm._v(_vm._s(_vm.$t('gear'+ item.level)))]),_vm._v(\" \"),_c('div',{staticClass:\"gear-amount\"},[_vm._v(_vm._s(_vm.$t('amount')))]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-6 basic-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(item.money),expression:\"item.money\"}],staticClass:\"basic-input\",attrs:{\"type\":\"number\",\"placeholder\":_vm.$t('total_price')},domProps:{\"value\":(item.money)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(item, \"money\", $event.target.value)}}}),_vm._v(\" \"),_c('span',{staticClass:\"target-token\"},[_vm._v(_vm._s(item.targetToken))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-sm-6 basic-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(item.unitNum),expression:\"item.unitNum\"}],staticClass:\"basic-input\",attrs:{\"type\":\"number\",\"placeholder\":_vm.$t('unit')},domProps:{\"value\":(item.unitNum)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(item, \"unitNum\", $event.target.value)}}}),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(item.unit),expression:\"item.unit\"}],attrs:{\"id\":\"unit\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(item, \"unit\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},_vm.changeUnit]}},[_c('option',{attrs:{\"value\":\"jin\"}},[_vm._v(_vm._s(_vm.$t('unit_jin')))]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"kg\"}},[_vm._v(_vm._s(_vm.$t('unit_kg')))]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"piece\"}},[_vm._v(_vm._s(_vm.$t('unit_piece')))])]),_vm._v(\" \"),_c('span',{staticClass:\"tri\"})])])])}),_vm._v(\" \"),(_vm.gearList.length<3)?_c('li',{staticClass:\"continue-add\",on:{\"click\":_vm.addGear}},[_vm._v(_vm._s(_vm.$t(\"continue_add\")))]):_vm._e()],2)]):_vm._e(),_vm._v(\" \"),_c('label',[_vm._v(_vm._s(_vm.$t('target_amount')))]),_vm._v(\" \"),_c('div',{staticClass:\"basic-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.amount),expression:\"modify.amount\"}],staticClass:\"basic-input\",attrs:{\"name\":\"targetAmount\",\"type\":\"number\",\"placeholder\":_vm.$t('target_amount_pl')},domProps:{\"value\":(_vm.modify.amount)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"amount\", $event.target.value)}}}),_vm._v(\" \"),(_vm.type==1)?_c('span',{staticClass:\"target-token\"},[_vm._v(_vm._s(_vm.modify.targetToken))]):[_c('select',{attrs:{\"id\":\"targetToken\"},on:{\"change\":_vm.changeTargetToken}},[_c('option',{attrs:{\"value\":\"EOS\"}},[_vm._v(\"EOS\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"EMDS\"}},[_vm._v(\"EMDS\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"EUSD\"}},[_vm._v(\"EUSD\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"EETH\"}},[_vm._v(\"EETH\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"EBTC\"}},[_vm._v(\"EBTC\")])]),_vm._v(\" \"),_c('span',{staticClass:\"tri\"})]],2),_vm._v(\" \"),(_vm.type!=1)?[_c('a',{staticClass:\"amount-set\",on:{\"click\":_vm.toggleShow}},[_vm._v(_vm._s(_vm.$t('amount_setting')))]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShow),expression:\"isShow\"}]},[_c('label',[_vm._v(_vm._s(_vm.$t('low_amount')))]),_vm._v(\" \"),_c('p',{staticClass:\"basic-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.low),expression:\"modify.low\"}],staticClass:\"basic-input\",attrs:{\"type\":\"number\",\"placeholder\":_vm.$t('low_amount_pl')},domProps:{\"value\":(_vm.modify.low)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"low\", $event.target.value)}}}),_vm._v(\" \"),_c('span',{staticClass:\"target-token\"},[_vm._v(_vm._s(_vm.modify.targetToken))])]),_vm._v(\" \"),_c('label',[_vm._v(_vm._s(_vm.$t('high_amount')))]),_vm._v(\" \"),_c('p',{staticClass:\"basic-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.high),expression:\"modify.high\"}],staticClass:\"basic-input\",attrs:{\"type\":\"number\",\"placeholder\":_vm.$t('high_amount_pl')},domProps:{\"value\":(_vm.modify.high)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"high\", $event.target.value)}}}),_vm._v(\" \"),_c('span',{staticClass:\"target-token\"},[_vm._v(_vm._s(_vm.modify.targetToken))])])])]:_vm._e(),_vm._v(\" \"),_c('label',[_vm._v(_vm._s(_vm.$t('end_date')))]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.endTime),expression:\"modify.endTime\"}],staticClass:\"basic-input\",attrs:{\"type\":\"date\",\"placeholder\":_vm.$t('end_date_pl')},domProps:{\"value\":(_vm.modify.endTime)},on:{\"change\":_vm.timeToStamp,\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"endTime\", $event.target.value)}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.endTimeStamp),expression:\"endTimeStamp\"}],staticClass:\"hide\",attrs:{\"name\":\"endDate\",\"type\":\"text\"},domProps:{\"value\":(_vm.endTimeStamp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.endTimeStamp=$event.target.value}}}),_vm._v(\" \"),_c('label',[_vm._v(_vm._s(_vm.$t('project_email')))]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modify.email),expression:\"modify.email\"}],staticClass:\"basic-input\",attrs:{\"name\":\"email\",\"type\":\"email\",\"placeholder\":_vm.$t('project_email_pl')},domProps:{\"value\":(_vm.modify.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.modify, \"email\", $event.target.value)}}}),_vm._v(\" \"),_c('div',{staticClass:\"agree\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.checked),expression:\"checked\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.checked)?_vm._i(_vm.checked,null)>-1:(_vm.checked)},on:{\"change\":function($event){var $$a=_vm.checked,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.checked=$$a.concat([$$v]))}else{$$i>-1&&(_vm.checked=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.checked=$$c}}}}),_vm._v(\" \"),_c('div',[_vm._v(_vm._s(_vm.$t('agree'))),_c('a',{attrs:{\"href\":\"#rule\",\"data-toggle\":\"modal\"}},[_vm._v(\"《\"+_vm._s(_vm.$t('mds_city_rule'))+\"》\")])])]),_vm._v(\" \"),_c('a',{staticClass:\"confirm\",on:{\"click\":_vm.nextStep}},[_vm._v(_vm._s(_vm.$t('next_step')))])],2)])])]),_vm._v(\" \"),_c('div',{staticClass:\"modal\",attrs:{\"id\":\"successModal\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content text-center\"},[_vm._m(0),_vm._v(\" \"),_c('img',{attrs:{\"src\":\"static/img/icon/web_icon_success.png\",\"width\":\"92\"}}),_vm._v(\" \"),_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('modify_success')))]),_vm._v(\" \"),_c('p',{staticClass:\"info\"},[_vm._v(_vm._s(_vm.$t('modify_success_tip')))]),_vm._v(\" \"),_c('router-link',{staticClass:\"modal-close\",attrs:{\"to\":\"/\",\"data-dismiss\":\"modal\"}},[_vm._v(_vm._s(_vm.$t('confirm')))])],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"modal\",attrs:{\"id\":\"rule\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"platform_rules\",domProps:{\"innerHTML\":_vm._s(_vm.$t('platform_rules'))}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"modal\",attrs:{\"id\":\"gear_des\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_vm._m(2),_vm._v(\" \"),_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('what_is_gear')))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.$t('gear_des')))]),_vm._v(\" \"),_c('p',{staticClass:\"example\"},[_vm._v(_vm._s(_vm.$t('example'))+\":\")]),_vm._v(\" \"),_c('ul',{staticClass:\"example-list\"},[_c('li',[_c('img',{attrs:{\"src\":\"static/img/icon/example.png\",\"width\":\"64\"}}),_vm._v(\" \"),_c('div',{staticClass:\"exam-info\"},[_c('h5',[_vm._v(\"1 EOS/ 1 kg\")]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.$t('example_title')))])])]),_vm._v(\" \"),_c('li',[_c('img',{attrs:{\"src\":\"static/img/icon/example.png\",\"width\":\"64\"}}),_vm._v(\" \"),_c('div',{staticClass:\"exam-info\"},[_c('h5',[_vm._v(\"2 EOS/ 2.5 kg\")]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.$t('example_title')))])])]),_vm._v(\" \"),_c('li',[_c('img',{attrs:{\"src\":\"static/img/icon/example.png\",\"width\":\"64\"}}),_vm._v(\" \"),_c('div',{staticClass:\"exam-info\"},[_c('h5',[_vm._v(\"3 EOS/ 4 kg\")]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.$t('example_title')))])])])])])])]),_vm._v(\" \"),_c('alert-modal',{attrs:{\"info\":_vm.alertInfo}}),_vm._v(\" \"),_c('mds-toast',{attrs:{\"toastInfo\":_vm.toastInfo,\"isWarn\":_vm.isWarn},on:{\"toast\":_vm.infoByToast}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4bafde2c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/project-modify.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4bafde2c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./project-modify.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./project-modify.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./project-modify.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4bafde2c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./project-modify.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4bafde2c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/project-modify.vue\n// module id = null\n// module chunks = ","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wangeditor/release/wangEditor.js\n// module id = sYY+\n// module chunks = 4 5","/*\n *  base64.js\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory(global)\n        : typeof define === 'function' && define.amd\n        ? define(factory) : factory(global)\n}((\n    typeof self !== 'undefined' ? self\n        : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n: this\n), function(global) {\n    'use strict';\n    // existing version for noConflict()\n    global = global || {};\n    var _Base64 = global.Base64;\n    var version = \"2.5.1\";\n    // if node.js and NOT React Native, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = eval(\"require('buffer').Buffer\");\n        } catch (err) {\n            buffer = undefined;\n        }\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ?\n        buffer.from && Uint8Array && buffer.from !== Uint8Array.from\n        ? function (u) {\n            return (u.constructor === buffer.constructor ? u : buffer.from(u))\n                .toString('base64')\n        }\n        :  function (u) {\n            return (u.constructor === buffer.constructor ? u : new  buffer(u))\n                .toString('base64')\n        }\n        : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var _atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/\\S{1,4}/g, cb_decode);\n    };\n    var atob = function(a) {\n        return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n    };\n    var _decode = buffer ?\n        buffer.from && Uint8Array && buffer.from !== Uint8Array.from\n        ? function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : buffer.from(a, 'base64')).toString();\n        }\n        : function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : new buffer(a, 'base64')).toString();\n        }\n        : function(a) { return btou(_atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict,\n        __buffer__: buffer\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/js-base64/base64.js\n// module id = xrTZ\n// module chunks = 4 5","<template>\n<div class='project-modify project-sm-container'>\n  <div class=\"isNull\" v-if='isNull'>{{$t('project_error')}}</div>\n  <div class=\"container\" v-else>\n    <div class=\"row\">\n      <div class=\"col-md-8 col-md-offset-2\">\n        <div class=\"title\">{{$t('basic_project_information')}}</div>\n        <!-- <div class=\"subtitle\">{{$t('submit_information')}}</div> -->\n        <form class=\"basic-form\" accept-charset=\"utf-8\" ref=\"form\" enctype=\"multipart/form-data\">\n          <!-- 项目发起者 creator -->\n          <input name=\"creator\" type=\"text\" v-model=\"modify.creator\" class=\"hide\">\n          <!-- 筹款账户 targetAccount-->\n          <input name=\"targetAccount\" type=\"text\" v-model=\"modify.targetAccount\" class=\"hide\">\n          <!-- 筹款Token,比如：EOS，IQ，MEV. targetToken -->\n          <input name=\"targetToken\" type=\"text\" v-model=\"modify.targetToken\" class=\"hide\">\n          <!-- 筹款 Token 合约，EOS 请填写 eosio.token   targetTokenContract-->\n          <input name=\"targetTokenContract\" type=\"text\" v-model=\"modify.targetTokenContract\" class=\"hide\">\n          <!-- eosID -->\n          <input name=\"eosID\" type=\"text\" v-model=\"modify.eosID\" class=\"hide\">\n          <!-- 项目名称 title-->\n          <label>{{$t('project_title')}}</label>\n          <input name=\"title\" type=\"text\" class=\"basic-input\" v-model=\"modify.title\" :placeholder=\"$t('project_title_pl')\" autofocus>\n          <!-- 项目简介 des -->\n          <label>{{$t('tell_story')}}</label>\n          <div id=\"story\">\n            <div v-if=\"!isFocus\" class=\"story_pl\">{{$t('tell_story_pl')}}</div>\n          </div>\n          <!-- 封面图片，注意name为数组，以后可能要传多张 photos[]-->\n          <label>{{$t('position_photo')}}</label>\n          <div class=\"photo-container\">\n            <div class='photo' :style=\"{background: modify.photos?'url(' + modify.photos +')no-repeat center/cover':'var(--paleBlue)'}\">\n              <input name=\"photos[]\" type=\"file\" @change=\"uploadPic\">\n              <template v-if='!isLoad'>\n                <img src=\"static/img/icon/web_icon_pic.png\" width=\"72\">\n                <h5>{{$t('position_photo_pl')}}</h5>\n                <p class=\"photo-tip\">{{$t('position_photo_tip')}}</p>\n              </template>\n            </div>\n            <div class=\"photo-ext\" v-if='isLoad'>\n              <div class=\"pull-right\">\n                <span class=\"delete\" @click=\"deletePic\">{{$t('delete')}}</span>\n                <span class=\"again\">{{$t('upload_again')}}</span>\n              </div>\n              <div class=\"blank\"></div>\n            </div>\n          </div>\n          <!-- 添加产品档位 只有电商产品存在 type==1 -->\n          <div class=\"gear\" v-if=\"type==1\">\n            <a href=\"#gear_des\" class=\"what-gear\" data-toggle=\"modal\">{{$t('what_is_gear')}}</a>\n            <label>{{$t('add_gear')}}</label>\n            <ul class=\"gear-list\">\n              <li v-for=\"(item, index) in gearList\" :key=\"index\">\n                <span class=\"delete-gear\" @click=\"deleteGear(index)\">{{$t('delete')}}</span>\n                <h3>{{$t('gear'+ item.level)}}</h3>\n                <div class=\"gear-amount\">{{$t('amount')}}</div>\n                <div class=\"row\">\n                  <div class=\"col-sm-6 basic-group\">\n                    <input class=\"basic-input\" type=\"number\" v-model=\"item.money\" :placeholder=\"$t('total_price')\">\n                    <span class=\"target-token\">{{item.targetToken}}</span>\n                  </div>\n                  <div class=\"col-sm-6 basic-group\">\n                    <input class=\"basic-input\" type=\"number\" v-model=\"item.unitNum\" :placeholder=\"$t('unit')\">\n                    <select id=\"unit\" @change=\"changeUnit\" v-model=\"item.unit\">\n                      <option value=\"jin\">{{$t('unit_jin')}}</option>\n                      <option value=\"kg\">{{$t('unit_kg')}}</option>\n                      <option value=\"piece\">{{$t('unit_piece')}}</option>\n                    </select>\n                    <span class=\"tri\"></span>\n                  </div>\n                </div>\n              </li>\n              <li class=\"continue-add\" v-if=\"gearList.length<3\" @click=\"addGear\">{{$t(\"continue_add\")}}</li>\n            </ul>\n          </div>\n          <!-- 筹款金额 targetAmount-->\n          <label>{{$t('target_amount')}}</label>\n          <div class=\"basic-group\">\n            <input name=\"targetAmount\" class=\"basic-input\" type=\"number\" v-model=\"modify.amount\" :placeholder=\"$t('target_amount_pl')\">\n            <span class=\"target-token\" v-if=\"type==1\">{{modify.targetToken}}</span>\n            <template v-else>\n              <select id=\"targetToken\" @change=\"changeTargetToken\">\n                <option value=\"EOS\">EOS</option>\n                <option value=\"EMDS\">EMDS</option>\n                <option value=\"EUSD\">EUSD</option>\n                <option value=\"EETH\">EETH</option>\n                <option value=\"EBTC\">EBTC</option>\n              </select>\n              <span class=\"tri\"></span>\n            </template>\n          </div>\n          <!-- 电商产品不展示最低和最高额度 -->\n          <template v-if=\"type!=1\">\n            <a @click=\"toggleShow\" class=\"amount-set\">{{$t('amount_setting')}}</a>\n            <div v-show=\"isShow\">\n              <!-- 最低筹款金额 ，非必须 low  -->\n              <label>{{$t('low_amount')}}</label>\n              <p class=\"basic-group\">\n                <input class=\"basic-input\" type=\"number\" v-model=\"modify.low\" :placeholder=\"$t('low_amount_pl')\">\n                <span class=\"target-token\">{{modify.targetToken}}</span>\n              </p>\n              <!-- 最高筹款金额 ，非必须 high-->\n              <label>{{$t('high_amount')}}</label>\n              <p class=\"basic-group\">\n                <input class=\"basic-input\" type=\"number\" v-model=\"modify.high\" :placeholder=\"$t('high_amount_pl')\">\n                <span class=\"target-token\">{{modify.targetToken}}</span>\n              </p>\n            </div>\n          </template>\n          <!-- 筹款结束时间 endDate-->\n          <label>{{$t('end_date')}}</label>\n          <input class=\"basic-input\" type=\"date\" v-model=\"modify.endTime\" :placeholder=\"$t('end_date_pl')\" @change=\"timeToStamp\">\n          <input name=\"endDate\" class=\"hide\" type=\"text\" v-model=\"endTimeStamp\" >\n          <!-- 反馈通知 email-->\n          <label>{{$t('project_email')}}</label>\n          <input name=\"email\" type=\"email\" class=\"basic-input\" v-model=\"modify.email\" :placeholder=\"$t('project_email_pl')\">\n          <div class=\"agree\">\n            <input type=\"checkbox\" v-model=\"checked\">\n            <div>{{$t('agree')}}<a href=\"#rule\" data-toggle=\"modal\">《{{$t('mds_city_rule')}}》</a></div>\n          </div>\n          <a class=\"confirm\" @click=\"nextStep\">{{$t('next_step')}}</a>\n        </form>\n      </div>\n    </div>\n  </div>\n  <!-- Modal -->\n  <div class=\"modal\" id=\"successModal\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content text-center\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span></button>\n        <img src=\"static/img/icon/web_icon_success.png\" width=\"92\">\n        <h4 class=\"modal-title\">{{$t('modify_success')}}</h4>\n        <p class=\"info\">{{$t('modify_success_tip')}}</p>\n        <router-link to=\"/\" data-dismiss=\"modal\" class=\"modal-close\">{{$t('confirm')}}</router-link>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal\" id=\"rule\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span></button>\n        <div class=\"platform_rules\" v-html=\"$t('platform_rules')\"></div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal\" id=\"gear_des\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span></button>\n        <h4 class=\"modal-title\">{{$t('what_is_gear')}}</h4>\n        <p>{{$t('gear_des')}}</p>\n        <p class=\"example\">{{$t('example')}}:</p>\n        <ul class=\"example-list\">\n          <li>\n            <img src=\"static/img/icon/example.png\" width=\"64\">\n            <div class=\"exam-info\">\n              <h5>1 EOS/ 1 kg</h5>\n              <p>{{$t('example_title')}}</p>\n            </div>\n          </li>\n          <li>\n            <img src=\"static/img/icon/example.png\" width=\"64\">\n            <div class=\"exam-info\">\n              <h5>2 EOS/ 2.5 kg</h5>\n              <p>{{$t('example_title')}}</p>\n            </div>\n          </li>\n          <li>\n            <img src=\"static/img/icon/example.png\" width=\"64\">\n            <div class=\"exam-info\">\n              <h5>3 EOS/ 4 kg</h5>\n              <p>{{$t('example_title')}}</p>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  <alert-modal :info='alertInfo'></alert-modal>\n  <mds-toast :toastInfo='toastInfo' :isWarn=\"isWarn\" @toast=\"infoByToast\"></mds-toast>\n</div>\n</template>\n\n<script>\nimport alertModal from '@/base/alert'\nimport 'wangeditor/release/wangEditor.css'\nimport E from 'wangeditor'\nimport sha from 'js-sha256'\nimport user from 'static/js/user'\nimport mdsToast from '@/base/toast'\nexport default {\n  props: ['eosID'],\n  data() {\n    return {\n      type: '',\n      url: '/apiCrowdfunding/modify',\n      modifyUrl: '/apiCrowdfunding/getInfo?eosID=',\n      alertInfo: '',\n      toastInfo: '',\n      isWarn: false,\n      checked: false, //是否同意规则\n      isLoad: false, //是否上传封面图片\n      isFocus: false, //富文本是否填写内容\n      isShow: false, //金额设置是否展示\n      desHash: '', //【 简介做 sha256 后的值 】\n      endTimeStamp: '', //【 筹款结束时间 时间戳s 】\n      modify: {\n        amount: 0, //【 筹款金额 】\n        creator: '', //【 项目发起者 】\n        des: '', //【 项目简介 】\n        endDate: '', //【 筹款结束时间 天数 】\n        endTime: '', //【 筹款结束时间 时间 】\n        eosID: '',\n        photos: '', //【 封面图片url 】\n        releaseTime: '',\n        targetAccount: '', //【 筹款账户 】\n        targetToken: 'EOS', //【 筹款Token,比如：EOS，IQ，MEV 】\n        targetTokenContract: 'eosio.token', //【 筹款 Token 合约，EOS 请填写 eosio.token 】\n        targetTokenDecimal: 4,\n        title: \"\", //【 项目名称 】\n        low: 0, //【 最低筹款金额 ，非必须 】\n        high: 0, //【 最高筹款金额 ，非必须 】\n        email: '' // 【 email 】\n      },\n      gearList: [], //档位\n      isNull: false\n    }\n  },\n  mounted() {\n    // 引入富文本编辑器\n    if (E == undefined) {\n      location.reload();\n    }\n    const editor = new E('#story')\n    const that = this\n    editor.customConfig.uploadImgServer = this.globalData.domain + '/apiCrowdfunding/uploadImg'\n    editor.customConfig.zIndex = 10\n    editor.customConfig.menus = [\n      'list', // 列表\n      'bold', // 粗体\n      'fontSize', // 字号\n      'italic', // 斜体\n      'image', // 插入图片\n      'justify' // 对齐方式\n    ]\n    editor.customConfig.lang = {\n      '上传图片': that.$t('upload_image'),\n      '网络图片': that.$t('web_image'),\n      '图片链接': that.$t('image_link'),\n      '插入': that.$t('insert'),\n      '字号': that.$t('font_size'),\n      '设置列表': that.$t('settings_list'),\n      '有序列表': that.$t('ordered'),\n      '无序列表': that.$t('unordered'),\n      '对齐方式': that.$t('alignment'),\n      '靠左': that.$t('left'),\n      '居中': that.$t('center'),\n      '靠右': that.$t('right')\n    }\n    editor.customConfig.onfocus = function () {\n      that.isFocus = true\n    }\n    editor.customConfig.onchange = function (html) {\n      that.isFocus = true\n      that.modify.des = html.replace(/<div class=\"story_pl\">&\\s*\\S*&<\\/div>/g, '')\n    }\n    editor.create()\n\n    // 编辑项目数据接口\n    this.$http.get(this.globalData.domain + this.modifyUrl + this.eosID).then((res) => {\n      if (res.data.success) {\n        this.modify = res.data.data\n        this.type = this.modify.type\n        if (this.type == 1) {\n          this.gearList = JSON.parse(this.modify.json)\n          this.gearList.map((item) => {\n            item.money = item.money / Math.pow(10, item.targetTokenDecimal)\n          })\n        }\n\n        if (this.modify.photos) {\n          this.isLoad = true\n        }\n        if (this.modify.des) {\n          editor.txt.html(this.modify.des)\n        }\n        if (this.modify.endTime) {\n          this.modify.endTime = res.data.data.endTime.slice(0, 10)\n          this.timeToStamp()\n        }\n      } else {\n        this.isNull = true\n      }\n    }, (err) => {\n      console.log(err)\n    })\n  },\n  methods: {\n    infoByToast: function (val) {\n      this.toastInfo = val\n    },\n    nextStep() {\n      this.isWarn = true\n      // 先做base64加密\n      let Base64 = require('js-base64').Base64\n      this.modify.des = Base64.encode(this.modify.des)\n      // 再做sha256加密\n      this.desHash = sha.sha256(this.modify.des)\n\n      // 判断是否登录\n      user.getAccount().then((res) => {\n        this.modify.creator = res.name\n        this.modify.targetAccount = res.name\n        $(\".login\").hide()\n        $(\".personal\").show()\n        $(\".currentAccount\").html(res.name)\n\n        // 表单匹配\n        if (!this.modify.title) {\n          this.toastInfo = this.$t('form_match_title')\n          return false\n        }\n        if (!this.modify.des) {\n          this.toastInfo = this.$t('form_match_des')\n          return false\n        }\n        if (!this.modify.photos) {\n          this.toastInfo = this.$t('form_match_photos')\n          return false\n        }\n        // 电商类项目\n        if (this.type == 1) {\n          let isGearListFalse = false\n          this.gearList.some((item, index) => {\n            if (item.money - 0 <= 0) {\n              isGearListFalse = true\n              this.toastInfo = this.$t('form_gear_money')\n              return true\n            }\n            if (item.unitNum - 0 <= 0) {\n              isGearListFalse = true\n              this.toastInfo = this.$t('form_gear_unitNum')\n              return true\n            }\n          })\n          if (isGearListFalse) {\n            return false\n          }\n        }\n        if (this.modify.amount == 0) {\n          this.toastInfo = this.$t('form_match_amount')\n          return false\n        }\n        if (this.modify.amount < 0) {\n          this.toastInfo = this.$t('form_match_no_negative')\n          return false\n        }\n        if (this.modify.low < 0) {\n          this.toastInfo = this.$t('form_match_no_negative')\n          return false\n        }\n        if (this.modify.high < 0) {\n          this.toastInfo = this.$t('form_match_no_negative')\n          return false\n        }\n        if (this.modify.low == 0) {\n          this.modify.low = 0.0001;\n        }\n        if (this.modify.high == 0) {\n          this.modify.high = this.modify.amount;\n        }\n        if (this.modify.low - 0 > this.modify.high - 0) {\n          this.toastInfo = this.$t('form_match_low')\n          return false\n        }\n        if (this.modify.high - 0 > this.modify.amount - 0) {\n          this.modify.high = this.modify.amount\n        }\n        if (!this.modify.endTime) {\n          this.toastInfo = this.$t('form_match_endTime')\n          return false\n        }\n        if (!this.checked) {\n          this.toastInfo = this.$t('agree_terms')\n          return false\n        }\n\n        // 生成表单数据\n        const formData = new FormData(this.$refs.form);\n        formData.append(\"low\", this.modify.low)\n        formData.append(\"high\", this.modify.high)\n        formData.append(\"type\", this.type)\n        formData.append(\"des\", this.modify.des)\n        formData.append(\"desHash\", this.desHash)\n\n        if (this.type == 1) {\n          // 档位信息\n          let gearJson = JSON.parse(JSON.stringify(this.gearList))\n          gearJson.map((item) => {\n            item.money = item.money * Math.pow(10, item.targetTokenDecimal)\n          })\n          formData.append(\"json\", JSON.stringify(gearJson))\n        }\n\n        // 去除空文件元素\n        try {\n          for (let pair of formData.entries()) {\n            if (pair[1] instanceof File && pair[1].name == '' && pair[1].size == 0) {\n              formData.delete(pair[0]);\n            }\n          }\n        } catch (e) {}\n\n        const eos = user.getEos()\n\n        // 创建项目提交到链上\n        eos.transaction({\n          actions: [{\n            account: this.globalData.contract, // 合约名\n            name: 'modify', // 合约方法\n            authorization: [{\n              actor: this.modify.creator, // 登录当前账户\n              permission: res.authority\n            }],\n            data: {\n              \"initiator\": this.modify.creator, // 项目发起人\n              \"id\": this.modify.eosID,\n              \"name\": this.modify.title, // 项目名称\n              \"item_digest\": this.desHash, //this.desHash, // 项目简介sha256 后的值 64 位\n              \"receiver\": this.modify.targetAccount, // 收款人\n              \"min_fund\": {\n                amount: parseFloat(this.modify.low).toFixed(this.modify.targetTokenDecimal),\n                precision: this.modify.targetTokenDecimal,\n                symbol: this.modify.targetToken,\n                contract: this.modify.targetTokenContract\n              },\n              \"max_fund\": {\n                amount: parseFloat(this.modify.high).toFixed(this.modify.targetTokenDecimal),\n                precision: this.modify.targetTokenDecimal,\n                symbol: this.modify.targetToken,\n                contract: this.modify.targetTokenContract\n              },\n              \"target_fund\": {\n                amount: parseFloat(this.modify.amount).toFixed(this.modify.targetTokenDecimal),\n                precision: this.modify.targetTokenDecimal,\n                symbol: this.modify.targetToken,\n                contract: this.modify.targetTokenContract\n\n              },\n              \"deadline\": this.endTimeStamp // 结束时间 时间戳(s)\n            }\n          }]\n        }).then(\n          result => {\n            // 成功，调用我们的接口\n            this.$http.post(this.globalData.domain + this.url, formData, {\n              cache: false,\n              processData: false,\n              contentType: false\n            }).then(res => {\n              if (res.data.success) {\n                $('#successModal').modal('show')\n              } else {\n                this.alertInfo = res.data.message\n                $('#alert').modal('show')\n              }\n            }, () => {\n              // 失败\n              this.alertInfo = this.$t('modify_error')\n              $('#alert').modal('show')\n            })\n          }\n        ).catch(error => {\n          // 失败\n          console.log(error)\n          this.alertInfo = this.$t('modify_error')\n          $('#alert').modal('show')\n        })\n      }, () => {\n        // 未安装 scatter 或 登录失败\n        this.toastInfo = this.$t('connect_scatter')\n      })\n    },\n    uploadPic(event) {\n      //获取的图片文件\n      var fileList = event.target.files[0];\n      if (fileList) {\n        this.modify.photos = window.URL.createObjectURL(fileList);\n        this.isLoad = true\n      }\n    },\n    deletePic(event) {\n      this.modify.photos = ''\n      this.isLoad = false\n    },\n    toggleShow() {\n      this.isShow = !this.isShow\n    },\n    // 时间戳 s\n    timeToStamp() {\n      this.endTimeStamp = (new Date(this.modify.endTime)).getTime() / 1000\n    },\n    changeTargetToken(event) {\n      const target = event.target.value\n      this.modify.targetToken = target\n      switch (target) {\n        case 'EOS':\n          this.modify.targetTokenDecimals = 4\n          this.modify.targetTokenContract = 'eosio.token'\n          break;\n        case 'EMDS':\n          this.modify.targetTokenDecimals = 4\n          this.modify.targetTokenContract = 'medisharesbp'\n          break;\n        default:\n          this.modify.targetTokenDecimals = 8\n          this.modify.targetTokenContract = 'bitpietokens'\n          break;\n      }\n    },\n    changeUnit(event) {\n      this.gearList.map((item) => {\n        item.unit = event.target.value\n      })\n    },\n    addGear() {\n      if (this.gearList.length < 3) {\n        this.gearList.push({\n          targetToken: this.gearList[0].targetToken, // token\n          targetTokenContract: this.gearList[0].targetTokenContract, // 合约地址\n          targetTokenDecimal: this.gearList[0].targetTokenDecimal, // 合约小数\n          money: '', // 金额整形\n          unitNum: '', // 单位数量\n          unit: this.gearList[0].unit, // 单位\n          level: this.gearList.length + 1 // 档位\n        })\n      } else if (this.gearList.length == 0) {\n        this.gearList.push({\n          targetToken: 'EUSD', // token\n          targetTokenContract: 'bitpietokens', // 合约地址\n          targetTokenDecimal: 8, // 合约小数\n          money: '', // 金额整形\n          unitNum: '', // 单位数量\n          unit: 'kg', // 单位\n          level: 1 // 档位\n        })\n      } else {\n        this.isWarn = true\n        this.toastInfo = this.$t('continue_add_toast')\n        return false\n      }\n    },\n    deleteGear(index) {\n      this.gearList.splice(index, 1)\n      this.gearList.map((item, index) => {\n        item.level = index + 1\n      })\n    }\n  },\n  components: {\n    alertModal,\n    mdsToast\n  }\n}\n</script>\n\n<style scoped>\n@import '../../static/css/basicForm.css'\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/project-modify.vue"],"sourceRoot":""}